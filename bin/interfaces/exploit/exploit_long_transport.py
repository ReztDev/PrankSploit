#!/usr/bin/python
import src.source.use
import bin.interfaces.MainConsole
import src.process.MainProcess
import src.banner.color
import bin.exploit.Long_Transport_Overflow

host = ""
class Exploit_Long_Transport_Overflow:
    def __init__(self, command):
        self.cmd = command

    def main_exploit(self):
        global host
        try:
            if self.cmd == "help":
                pass

            elif self.cmd == "show options":
                pass

            elif self.cmd == "back":
                bin.interfaces.MainConsole.main_interfaces()

            elif "set HOST" in self.cmd:
                try:
                    target = self.cmd.split()[2]
                    print("TARGET => {}".format(target))
                except IndexError:
                    src.Logging.print_stdout.print_error(
                        "Usage: set HOST [target]"
                    )

            elif self.cmd == "run":
                if host != "":
                    bin.exploit.Long_Transport_Overflow.Long_Transporting_Mode_Overflow(host)
                if host == "":
                    src.Logging.print_stdout.print_error(
                        "Please required insert your target to run exploit!"
                    )

            else:
                process = src.process.MainProcess.Process_Shell(self.cmd)
                process.main_process()
        
        except IOError as error:
            src.Logging.print_stdout.print_error(
                str(error)
            )
            src.source.use.sys.exit(0)

def Main_Interactive_Long_Transporting():
    try:
        while True:
            cmd = raw_input(
                "{l1}prsf{l2} exploit({r1}long_transport_overflow{r2}) > ".format(
                    l1=src.banner.color.pycolor_style.L,
                    l2=src.banner.color.pycolor_style.W,
                    r1=src.banner.color.pycolor_style.R,
                    r2=src.banner.color.pycolor_style.W
                )
            )
            if cmd == "exit":
                src.source.use.sys.exit(0)
            overflow = Exploit_Long_Transport_Overflow(cmd)
            overflow.main_exploit()
    except KeyboardInterrupt:
        print_error('Interrupt by user, command "exit" to quit!!')
        Main_Interactive_Long_Transporting()
    except EOFError:
        src.source.use.sys.exit()