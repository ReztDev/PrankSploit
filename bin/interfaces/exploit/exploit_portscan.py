#!/usr/bin/python
import src.source.use
from src.process.MainProcess import Process_Shell
from src.banner.color import pycolor_style
from src.Logging.print_stdout import print_error
import bin.interfaces.MainConsole
from bin.exploit.portscan import Port_Scanner
import bin.interfaces.source.help_interfaces.exploit.help_scanner

host = ""
class Exploit_Port_Scanner(object):
    def __init__(self, commands):
        self.values = commands

    def main_exploit(self):
        try:
            global host
            if self.values == "help":
                print(showHelpMessage())

            elif self.values == "show options":
                print(
                    bin.interfaces.source.help_interfaces.exploit.help_scanner.showOptionsMessage(host)
                )

            elif self.values == "back":
                bin.interfaces.MainConsole.main_interfaces()

            elif "set HOST" in self.values:
                try:
                    host = self.values.split()[2]
                    print("HOST => {}".format(host))
                except IndexError:
                    print_error("Required your host target!!")

            elif self.values == "run":
                if host != "":
                    scan = Port_Scanner(host)
                    scan.run_scan()
                else:
                    print(showOptionsMessage(host))

            else:
                proc = Process_Shell(self.values)
                proc.main_process()

        except:
            pass

def Main_Interactive_PortScanner():
    try:
        while True:
            cmd = raw_input("{ln}prsf{ln1} exploit({rd}port_scanner{rd1}) > ".format(
                ln=pycolor_style.L, ln1=pycolor_style.W, rd=pycolor_style.R, rd1=pycolor_style.W
            ))
            scan = Exploit_Port_Scanner(cmd)
            scan.main_exploit()
            if cmd == "exit":
                src.source.use.sys.exit()
    except KeyboardInterrupt:
        print_error('Interrupt by user, command "exit" to quit!!')
        Main_Interactive_PortScanner()