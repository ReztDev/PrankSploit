#!/usr/bin/python
import src.source.use
import src.Logging.print_stdout
import src.banner.color
import src.process.MainProcess
import bin.interfaces.MainConsole
import bin.exploit.nmapScanner

host = ""
port = ""
class Exploit_Nmap_Scanner(object):
    def __init__(self, commands):
        global host, port
        self.values = commands

    def main_exploit(self):
        try:
            if self.values == "help":
                pass

            elif self.values == "show options":
                pass

            elif self.values == "back":
                bin.interfaces.MainConsole.main_interfaces()

            elif "set RHOST" in self.values:
                try:
                    host = self.values.split()[2]
                    print("RHOST => {}".format(host))
                except IndexError:
                    src.Logging.print_stdout.print_error(
                        "Usage: set RHOST <target_host>"
                    )
                
            elif "set RPORT" in self.values:
                try:
                    port = self.values.split()[2]
                    print("RPORT => {}".format(port))
                except IndexError:
                    src.Logging.print_stdout.print_error(
                        "Usage: set RPORT <port_target>"
                    )

            elif self.values == "run":
                if host != "" and port != "":
                    bin.exploit.nmapScanner.start_scan(host, port)
                else:
                    pass

            else:
                self.process = src.process.MainProcess.Process_Shell(self.values)
                self.process.main_process()

        except:
            pass

def Interactive_Nmap_Scanner():
    try:
        process = True
        while process:
            cmd = raw_input(
                "{line}prsf{_line} exploit({red}nmap_scanner{_red}) > ".format(
                    line=src.banner.color.pycolor_style.L,
                    _line=src.banner.color.pycolor_style.W,
                    red=src.banner.color.pycolor_style.R,
                    _red=src.banner.color.pycolor_style.W
                )
            )
            if cmd == "exit":
                src.source.use.sys.exit(0)
            else:
                main = Exploit_Nmap_Scanner(cmd)
                main.main_exploit()
    except KeyboardInterrupt:
        src.Logging.print_stdout.print_error(
            'Interrupt by user, command "exit" to quit!!'
        )
        Interactive_Nmap_Scanner()
    except EOFError, SystemExit:
        src.source.use.sys.exit(0)