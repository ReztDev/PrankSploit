#!/usr/bin/python
from src.Logging.print_stdout import print_error
from src.banner.color import pycolor_style
from src.process.MainProcess import Process_Shell
from bin.exploit.AdminFinder import Admin_Finder_Scanner
import bin.interfaces.MainConsole
from bin.interfaces.source.help_interfaces.exploit.help_finder import showHelpMessage, showOptionsMessage

target = ""
class Exploit_Finder(object):
    def __init__(self, values):
        self.command = values

    def main_exploit(self):
        global target
        try:
            if self.command == "help":
                print(showHelpMessage())

            elif self.command == "show options":
                print(showOptionsMessage(target))

            elif self.command == "back":
                bin.interfaces.MainConsole.main_interfaces()

            elif "set SITE" in self.command:
                try:
                    target = self.command.split()[2]
                    print("SITE => {}".format(target))
                except IndexError:
                    print_error("Required input site target ex: www.target.com")

            elif self.command == "run":
                if target != "":
                    finder = Admin_Finder_Scanner(target)
                    finder.run_search()
                else:
                    print(showOptionsMessage(target))

            else:
                proc = Process_Shell(self.command)
                proc.main_process()
                
        except IOError as error:
            print_error(str(error))

def Main_Interactive_Finder():
    try:
        while True:
            cmd = raw_input("{ln}prsf{ls} exploit({red}finder{rd}) > ".format(
                ln=pycolor_style.L, ls=pycolor_style.W, red=pycolor_style.R, rd=pycolor_style.W
            ))
            find = Exploit_Finder(cmd)
            find.main_exploit()
            if cmd == "exit":
                exit(0)
    except KeyboardInterrupt:
        print_error('Interrupt by user, command "exit" to quit!')
        Main_Interactive_Finder()