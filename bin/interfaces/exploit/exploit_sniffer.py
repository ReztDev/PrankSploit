#!/usr/bin/python
import src.source.use
from src.banner.color import pycolor_style
from src.Logging.print_stdout import print_error
from src.process.MainProcess import Process_Shell
from bin.exploit.packet_sniffer import Packet_Sniffing
import bin.interfaces.MainConsole
from bin.interfaces.source.help_interfaces.exploit.help_sniffer import showHelpMessage, showOptionsMessage

interfaces = ""
class Exploit_Sniffer(object):
    def __init__(self, commands):
        self.values = commands

    def main_exploit(self):
        global interfaces
        try:
            if self.values == "help":
                print(showHelpMessage())

            elif self.values == "show options":
                print(showOptionsMessage(interfaces))

            elif self.values == "back":
                bin.interfaces.MainConsole.main_interfaces()

            elif "set IFACE" in self.values:
                try:
                    interfaces = self.values.split()[2]
                    print("INTERFACE => {}".format(interfaces))
                except IndexError:
                    print_error("Required your interfaces!!")

            elif self.values == "run":
                if interfaces != "":
                    pkt = Packet_Sniffing(interfaces)
                    pkt.main()
                else:
                    print(showOptionsMessage(interfaces))

            else:
                proc = Process_Shell(self.values)
                proc.main_process()

        except:
            pass

def Main_Interactive_Sniffer():
    try:
        while True:
            cmd = raw_input("{ln}prsf{ln1} exploit({rd}packet_sniffer{rd1}) > ".format(
                ln=pycolor_style.L, ln1=pycolor_style.W, rd=pycolor_style.R, rd1=pycolor_style.W
            ))
            snf = Exploit_Sniffer(cmd)
            snf.main_exploit()
            if cmd == "exit":
                src.source.use.sys.exit()
    except KeyboardInterrupt:
        print_error('Interrupt by user, command "exit" to quit!!')
        Main_Interactive_Sniffer()