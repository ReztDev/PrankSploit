#!/usr/bin/python
import src.source.use
from src.Logging.print_stdout import print_warning, print_process, print_error

class ReplaceMAC_Linux:
    def __init__(self, interfaces, mac_address):
        self.interfaces = interfaces
        self.mac_address = mac_address
        if not self.interfaces:
            print_warning("Please input your interfaces!")
            exit(0)
        if not self.mac_address:
            print_warning("Please input mac address!!")
            exit(1)

    def with_random(self):
        try:
            src.source.use.random.seed()
            self.new_mac = self.mac_address[:8].lower().replace('-', ':')
            for i in xrange(0, 6):
                if i % 2 == 0:
                    self.new_mac += ':'
                    self.new_mac += '0123456789abcdef'[src.source.use.random.randint(0, 15)]
            src.source.use.subprocess.call(['sudo', 'ifconfig', self.interfaces, 'down'])
            process = src.source.use.subprocess.Popen(['sudo', 'ifconfig', self.interfaces, 'hw', 'ether', self.new_mac],
                                                      stdout=src.source.use.subprocess.PIPE, stderr=src.source.use.subprocess.PIPE).wait()
            src.source.use.subprocess.call(['sudo', 'ifconfig', self.interfaces, 'up'])
            if self.new_mac == self.mac_address:
                self.with_random()
            print_process("Completed successfully!!")
        except IOError as error:
            print_error(str(error))
        except KeyboardInterrupt:
            print_warning("Canceling process...")
            exit(0)

    def special_mac_address(self):
        mac_bypass = ['02:D7:1D:3D:FC:52',
                      '02:CO:D8:06:9A:E2',
                      '02:60:30:AC:FB:17',
                      '02:27:27:27:27:02',
                      '02:18:B9:37:68:13',
                      '02:02:17:08:19:45',
                      '02:00:01:02:03:04',
                      '48:D2:24:6F:95:EB'
                      ]
        random_replace = src.source.use.random.choice(mac_bypass)
        src.source.use.subprocess.call(['sudo', 'ifconfig', self.interfaces, 'down'])
        process = src.source.use.subprocess.Popen(['sudo', 'ifconfig', self.interfaces, 'hw', 'ether', random_replace],
                                                  stdout=src.source.use.subprocess.PIPE, stderr=src.source.use.subprocess.PIPE).wait()
        src.source.use.subprocess.call(['sudo', 'ifconfig', self.interfaces, 'up'])


class ReplaceMAC_Android:
    def __init__(self, interfaces, mac_address):
        self.interfaces = interfaces
        self.mac_address = mac_address
        if not self.interfaces:
            print_warning("Please input your interfaces!!")
            exit(0)
        if not self.mac_address:
            print_warning("Please input the mac address!!")
            exit(0)

    def replace_random(self):
        try:
            src.source.use.random.seed()
            self.new_macAddress = self.mac_address[:8].lower().replace('-', ':')
            for i in xrange(0, 6):
                if i % 2 == 0:
                    self.new_macAddress += ':'
                    self.new_macAddress += '0123456789abcdef'[src.source.use.random.randint(0, 15)]
            print_process("Started Change New Mac Address...")
            src.source.use.time.sleep(2)
            src.source.use.os.system('echo ' + self.new_macAddress + '>/data/.nvmac.info')
            print_process("Processing on background jobs")
            src.source.use.time.sleep(2)
            src.source.use.os.system('echo ' + self.new_macAddress + '>/data/misc/wifi/wifimac')
            src.source.use.os.system('echo ' + self.new_macAddress + '>/efs/wifi/.mac.info')
            src.source.use.os.system('echo ' + self.new_macAddress + '>/efs/wifi/.mac.cob')
            print_process("Just a moments...."); src.source.use.time.sleep(1)
            print_process("Completed successfully.")
            if self.new_macAddress == self.mac_address:
                self.replace_random()
        except KeyboardInterrupt:
            print_warning("Canceling process...")
            exit(1)

    @staticmethod
    def replace_special():
        try:
            print_process("Started Changing Mac address...")
            src.source.use.time.sleep(3)
            mac_bypass = ['02:D7:1D:3D:FC:52',
                          '02:CO:D8:06:9A:E2',
                          '02:60:30:AC:FB:17',
                          '02:27:27:27:27:02',
                          '02:18:B9:37:68:13',
                          '02:02:17:08:19:45',
                          '02:00:01:02:03:04',
                          '48:D2:24:6F:95:EB'
                          ]
            change_random = src.source.use.random.choice(mac_bypass)
            print_process("Processing Changing... Please dont stop script!")
            src.source.use.time.sleep(1)
            subprocess.call(['echo ' + change_random + '>/data/.nvmac.info'])
            subprocess.call(['echo ' + change_random + '>/data/misc/wifi/wifimac'])
            subprocess.call(['echo ' + change_random + '>/efs/wifi/.mac.info'])
            subprocess.call(['echo ' + change_random + '>/efs/wifi/.mac.cob'])
            print_process("Completed successfully")
        except KeyboardInterrupt:
            print_warning("Canceling process....")
            exit(0)