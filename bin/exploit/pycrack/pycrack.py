#!/usr/bin/python
import src.source.use
import bin.interfaces.exploit.exploit_cracking
from bin.exploit.pycrack.mainCrack.hash_md5 import crack_hashMD5
from bin.exploit.pycrack.mainCrack.hash_sha1 import crack_hashSHA1
from bin.exploit.pycrack.mainCrack.hash_sha224 import crack_hashSHA224
from bin.exploit.pycrack.mainCrack.hash_sha256 import crack_hashSHA256
from bin.exploit.pycrack.mainCrack.hash_sha384 import crack_hashSHA384
from bin.exploit.pycrack.mainCrack.hash_sha512 import crack_hashSHA512
from src.Logging.print_stdout import print_process, print_warning, print_error

class MainCracking_Password(object):
    def __init__(self, hash_password, password_files):
        self.hash_password = hash_password
        self.password_files = password_files
        if not self.hash_password:
            print_warning("Please input hash password you!")
            exit(0)
        if not self.password_files:
            print_warning("Please input dictionary file you!")
            exit(1)

    def runCrack(self):
        print
        print_process("Starting Cracking Hash at {time}".format(time=src.source.use.time.strftime("%H:%M:%S")))
        print_process("Password Hash: {pwd}".format(pwd=self.hash_password))
        print_process("Wordlist Path: {words}".format(words=self.password_files))
        if len(self.hash_password) == 32:
            crack_hashMD5(self.hash_password, self.password_files)

        elif len(self.hash_password) == 40:
            crack_hashSHA1(self.hash_password, self.password_files)

        elif len(self.hash_password) == 56:
            crack_hashSHA224(self.hash_password, self.password_files)

        elif len(self.hash_password) == 64:
            crack_hashSHA256(self.hash_password, self.password_files)

        elif len(self.hash_password) == 96:
            crack_hashSHA384(self.hash_password, self.password_files)

        elif len(self.hash_password) == 128:
            crack_hashSHA512(self.hash_password, self.password_files)

        else:
            print_error("Error, Unknown hash password!!")
            bin.interfaces.exploit.exploit_cracking.Main_Interactive_Cracker()