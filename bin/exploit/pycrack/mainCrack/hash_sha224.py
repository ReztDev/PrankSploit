#!/usr/bin/python
import src.source.use
import src.process.verbose
import bin.interfaces.exploit.exploit_cracking
from src.Logging.print_stdout import print_error, print_process, print_warning

def crack_hashSHA224(password, password_list):
    global value
    try:
        with open(password_list, "r") as dictionary:
            words = dictionary.readlines()
        hashed = {}
        try:
            src.process.verbose.verbose_mode(words)
            for word in words:
                sha224 = src.source.use.hashlib.sha224()
                sha224.update(word[:-1])
                value = sha224.hexdigest()
                hashed[word[:-1]] = value
            for (key, value) in hashed.items():
                if password == value:
                    print_process("Found valid password is {}".format(key))
                    bin.interfaces.exploit.exploit_cracking.Main_Interactive_Cracker()
            if not password in value:
                print_error("Not found valid password!!")
                bin.interfaces.exploit.exploit_cracking.Main_Interactive_Cracker()
        except KeyboardInterrupt:
            print_warning("Interrupt user, canceling...")
            exit(0)
    except IOError as error:
        print_error(str(error))